refactor: Enhance scheduler with TickStart and TickEnd execution phases

This commit refines the task scheduler to provide more granular control over task execution within a game tick, inspired by Minestom's approach.

Key changes include:

- **`ExecutionType` Expansion:**
    - Introduced `TickStart` and `TickEnd` execution types in `internal/scheduler/execution_type.go`. `Async` remains for immediate, separate goroutine execution.

- **Scheduler Granularity:**
    - `internal/scheduler/scheduler.go` has been updated to manage separate internal queues for `TickStart` and `TickEnd` tasks.
    - The `RunTickTasks` method now processes tasks in a defined order: all `TickStart` tasks are executed first, followed by all `TickEnd` tasks. This ensures predictable execution within a game loop.
    - The `executeTask` method now correctly directs tasks to their respective queues based on the specified `ExecutionType`.

This enhancement allows for more precise timing and ordering of operations that need to occur at specific points within a game tick, improving the scheduler's utility for game server development.